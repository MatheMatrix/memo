# pylint: disable=line-too-long

import couchdb
import infinit.beyond
import infinit.beyond.bottle
import infinit.beyond.couchdb
import infinit.beyond.gcs
import uwsgi

datastore = infinit.beyond.couchdb.CouchDBDatastore(couchdb.Server())

def getopt(name, fallback = None):
  opt = uwsgi.opt.get(name)
  if opt is not None:
    return eval(opt.decode())
  return fallback

# Image bucket (for avatars, etc.)
image_bucket_login = getopt('image-bucket-login')
image_bucket_key = getopt('image-bucket-key')
if image_bucket_login is not None and image_bucket_key is not None:
  image_bucket = infinit.beyond.gcs.GCS(
    login = image_bucket_login,
    key = image_bucket_key.encode('UTF-8'),
    bucket_ns = 'sh_infinit_beyond')
else:
  image_bucket = None

beyond = infinit.beyond.Beyond(
  datastore = datastore,
  dropbox_app_key = getopt('dropbox-app-key'),
  dropbox_app_secret = getopt('dropbox-app-secret'),
  google_app_key = getopt('google-app-key'),
  google_app_secret = getopt('google-app-secret'),
  gcs_app_key = getopt('gcs-app-key'),
  gcs_app_secret = getopt('gcs-app-secret'),
  sendwithus_api_key = getopt('sendwithus-api-key'),
  delegate_user = ${repr(delegate_user)},
  keep_deleted_users = getopt('keep-deleted-users'),
)

application = infinit.beyond.bottle.Bottle(
  admin_users = getopt('admin-users', []),
  beyond = beyond,
  image_bucket = image_bucket,
  ldap_server = getopt('ldap-server'),
)

# Local Variables:
# mode: python
# End:
