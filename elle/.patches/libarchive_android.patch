--- libarchive-3.1.2/libarchive/archive_read_disk_posix.c.ori	2015-01-07 15:49:05.904081443 +0100
+++ libarchive-3.1.2/libarchive/archive_read_disk_posix.c	2015-01-07 15:51:41.688074892 +0100
@@ -1660,8 +1660,7 @@
 {
 	struct tree *t = a->tree;
 	struct statfs sfs;
-	struct statvfs svfs;
-	int r, vr = 0, xr = 0;
+	int r, xr = 0;
 
 	if (tree_current_is_symblic_link_target(t)) {
 #if defined(HAVE_OPENAT)
@@ -1677,7 +1676,6 @@
 			    "openat failed");
 			return (ARCHIVE_FAILED);
 		}
-		vr = fstatvfs(fd, &svfs);/* for f_flag, mount flags */
 		r = fstatfs(fd, &sfs);
 		if (r == 0)
 			xr = get_xfer_size(t, fd, NULL);
@@ -1687,14 +1685,12 @@
 			archive_set_error(&a->archive, errno, "fchdir failed");
 			return (ARCHIVE_FAILED);
 		}
-		vr = statvfs(tree_current_access_path(t), &svfs);
 		r = statfs(tree_current_access_path(t), &sfs);
 		if (r == 0)
 			xr = get_xfer_size(t, -1, tree_current_access_path(t));
 #endif
 	} else {
 #ifdef HAVE_FSTATFS
-		vr = fstatvfs(tree_current_dir_fd(t), &svfs);
 		r = fstatfs(tree_current_dir_fd(t), &sfs);
 		if (r == 0)
 			xr = get_xfer_size(t, tree_current_dir_fd(t), NULL);
@@ -1703,23 +1699,22 @@
 			archive_set_error(&a->archive, errno, "fchdir failed");
 			return (ARCHIVE_FAILED);
 		}
-		vr = statvfs(".", &svfs);
 		r = statfs(".", &sfs);
 		if (r == 0)
 			xr = get_xfer_size(t, -1, ".");
 #endif
 	}
-	if (r == -1 || xr == -1 || vr == -1) {
+	if (r == -1 || xr == -1) {
 		t->current_filesystem->synthetic = -1;
 		t->current_filesystem->remote = -1;
 		archive_set_error(&a->archive, errno, "statfs failed");
 		return (ARCHIVE_FAILED);
 	} else if (xr == 1) {
 		/* pathconf(_PC_REX_*) operations are not supported. */
-		t->current_filesystem->xfer_align = svfs.f_frsize;
+		t->current_filesystem->xfer_align = sfs.f_frsize;
 		t->current_filesystem->max_xfer_size = -1;
-		t->current_filesystem->min_xfer_size = svfs.f_bsize;
-		t->current_filesystem->incr_xfer_size = svfs.f_bsize;
+		t->current_filesystem->min_xfer_size = sfs.f_bsize;
+		t->current_filesystem->incr_xfer_size = sfs.f_bsize;
 	}
 	switch (sfs.f_type) {
 	case AFS_SUPER_MAGIC:
@@ -1743,11 +1738,6 @@
 		break;
 	}
 
-#if defined(ST_NOATIME)
-	if (svfs.f_flag & ST_NOATIME)
-		t->current_filesystem->noatime = 1;
-	else
-#endif
 		t->current_filesystem->noatime = 0;
 
 #if defined(HAVE_READDIR_R)
--- libarchive-3.1.2/tar/util.c.ori	2015-01-07 15:58:15.036058350 +0100
+++ libarchive-3.1.2/tar/util.c	2015-01-07 15:59:35.332054973 +0100
@@ -62,6 +62,9 @@
 #include "bsdtar.h"
 #include "err.h"
 
+int wctomb(char *s, wchar_t wc) { return wcrtomb(s,wc,NULL); }
+int mbtowc(wchar_t *pwc, const char *s, size_t n) { return mbrtowc(pwc, s, n, NULL); }
+
 static size_t	bsdtar_expand_char(char *, size_t, char);
 static const char *strip_components(const char *path, int elements);
 
