import drake
import drake.cxx

library = None

def configure(cxx_toolkit,
              cxx_config):
  global library

  # List sources of our geometry library.
  sources = drake.nodes(
    'Shape.hh', # Source node paths are relative to the drakefile.
    'Shape.cc',
    'Square.hh',
    'Square.cc',
  )

  # Declare a builder for the shape dynamic library.
  # This will create a .so, .dylib or .dll depending on the cxx_toolkit used.
  library = drake.cxx.DynLib(
    path = 'lib/shape', # Path to output the library to in the build directory.
    sources = sources, # Sources the library depends on.
    cfg = cxx_config,   # C++ compiler configuration to use.
    tk = cxx_toolkit,   # C++ toolkit to use.
  )
