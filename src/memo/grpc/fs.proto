syntax = "proto3";

service FileSystem {
  rpc MkDir(Path) returns (FsStatus) {}
  rpc ListDir(Path) returns (DirectoryContent) {}
  rpc RmDir(Path) returns (FsStatus) {}
  rpc RmFile(Path) returns (FsStatus) {}
  rpc OpenFile(Path) returns (StatusHandle) {}
  rpc CloseFile(Handle) returns (FsStatus) {}
  rpc Read(HandleRange) returns (StatusBuffer) {}
  rpc Write(HandleBuffer) returns (FsStatus) {}
  rpc ReadStream(HandleRange) returns (stream StatusBuffer) {}
  rpc WriteStream(stream HandleBuffer) returns (FsStatus) {}
}

message Handle {
  string handle = 1;
};

message Range {
  int64 offset = 1;
  int64 size = 2;
};

message HandleRange {
  Handle handle = 1;
  Range range = 2;
};

message HandleBuffer {
  Handle handle = 1;
  Buffer buffer = 2;
};

message Buffer {
  int64 offset = 1;
  string data = 2;
};

message StatusBuffer {
  FsStatus status = 1;
  Buffer buffer = 2;
};

message StatusHandle {
  FsStatus status = 1;
  Handle handle = 2;
};

enum EntryType {
  ENTRY_OTHER = 0;
  ENTRY_DIRECTORY = 1;
  ENTRY_FILE = 2;
};

message Entry {
  string name = 1;
  EntryType type = 2;
};

message FsStatus {
  int32 code = 1;
  string message = 2;
};

message DirectoryContent {
  FsStatus status = 1;
  repeated Entry content = 2;
};

message Path {
  string path = 1;
};