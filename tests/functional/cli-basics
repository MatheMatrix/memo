#!/usr/bin/env python3

from utils import *
import json
import re

with Memo() as bob:
  def neutralize(s):
    '''Fix gratuitous differences such as Window paths vs. Unix ones.'''
    s = re.sub(r'Z:.*?\\(%s(?:-\w+)?).exe' % binary, r'./bin/\1', s)
    # Gee...  Maybe do this in assertEq?
    s = s.replace('\r\n', '\n')
    return s

  def xfail(command, message):
    err = neutralize(bob.run(command, return_code = 2)[1])
    assertEq(message, err)

  xfail(['--foo'],
        "./bin/memo: command line error: unknown option: --foo\n"
        "Try './bin/memo --help' for more information.\n")

  xfail(['foo'],
        "./bin/memo: command line error: unknown object type: foo\n"
        "Try './bin/memo --help' for more information.\n")

  xfail(['network', 'foo'],
        "./bin/memo: command line error: unknown mode for object network: foo\n"
        "Try './bin/memo network --help' for more information.\n")

  xfail(['network', '--foo'],
        "./bin/memo: command line error: unknown option: --foo\n"
        "Try './bin/memo network --help' for more information.\n")

  # Regression: invalid trailing option, which used to be ignored.
  xfail(['network', 'list', '--foo'],
        "./bin/memo: command line error: unknown option: --foo\n"
        "Try './bin/memo network list --help' for more information.\n")

  xfail(['user', 'create','--name'],
        "./bin/memo: command line error: option requires an argument: --name\n"
        "Try './bin/memo user create --help' for more information.\n")
