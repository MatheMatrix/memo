#!/usr/bin/env python3

from utils import *

with TemporaryDirectory() as tmp, \
     Beyond() as beyond, \
     Memo(beyond = beyond) as bob:
  server = beyond.domain
  email = 'crash@infinit.sh'
  template = 'Internal/Crash Report'

  bob.run(['user', 'create', '--name', 'bob'])

  def mails():
    res = beyond.emailer.get_specifics(email, template)
    print("mails:", res, file=sys.stderr)
    return res

  def dumps():
    return os.listdir(str(tmp))

  def crash():
    # Crash returns 2 on OS X and 11 on Linux so work around with try except.
    try:
      bob.run(['--server', server, '--dumps', str(tmp), '--crash'],
              binary = 'tests/functional/bin/crasher')
      assert False
    except:
      pass
    global ndumps
    ndumps += 1
    # Leave some time for the minidump to be written.
    from time import sleep
    sleep(2)

  def upload(server = server):
    bob.run(['--server', server, '--dumps', str(tmp)],
            binary = 'tests/functional/bin/crasher')

  # Cannot use it as it will really try to contact the host, and I
  # don't know how to fake that.
  def doctor_upload_log():
    # This always sends an email.
    global nmails
    nmails += 1
    bob.run(['doctor', 'log', 'push', '--match', '.*',
             '--as', 'bob'])

  # Nothing uploaded as there are no crashes.
  ndumps = 0
  nmails = 0

  assertEq(len(dumps()), ndumps)
  assertEq(len(mails()), nmails)

  # Nothing to upload.
  upload(); ndumps = 0
  assertEq(len(mails()), nmails)

#  doctor_upload_log()
#  assertEq(len(mails()), nmails)

  # Crash and then upload
  crash()
  assertEq(len(dumps()), ndumps)
  upload(); nmails += ndumps; ndumps = 0
  assertEq(len(mails()), nmails)
  assertEq(len(dumps()), ndumps)

  # Crash twice, upload all
  crash()
  crash()
  assertEq(len(dumps()), ndumps)
  upload(); nmails += ndumps; ndumps = 0
  assertEq(len(mails()), nmails)
  assertEq(len(dumps()), ndumps)

  # Unable to upload, then upload
  crash()
  assertEq(len(dumps()), ndumps)
  upload(server = server + '/invalid/route')
  assertEq(len(dumps()), ndumps)
  upload(); nmails += ndumps; ndumps = 0
  assertEq(len(dumps()), ndumps)
  assertEq(len(mails()), nmails)
