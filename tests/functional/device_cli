#!/usr/bin/env python3

from utils import *
import json

## --------------- ##
## Use hub to pair ##
##---------------- ##
# Normal case.
with Beyond() as beyond, Memo(beyond = beyond) as alice, \
     Memo(beyond = beyond) as alice2:
  # Signup without sending private key.
  alice.run(['user', 'signup',
             '--name', 'alice',
             '--email', 'alice@infinit.sh'])
  alice_json = alice.run_json(
    ['user', 'export', '--name', 'alice', '--full'])
  alice.run(
    ['device', 'transmit', '--user', '--as', 'alice',
     '--passphrase', 'the_passphrase', '--no-countdown'])
  alice2.run(
    ['device', 'receive', '--user', '--name', 'alice',
     '--passphrase', 'the_passphrase'])
  alice2_json = alice2.run_json(
    ['user', 'export', '--name', 'alice', '--full'])
  assertEq(alice_json['private_key'], alice2_json['private_key'])

# Passphrase from input.
with Beyond() as beyond, Memo(beyond = beyond) as alice, \
     Memo(beyond = beyond) as alice2:
  passphrase = 'super_passphrase'
  # Signup without sending private key.
  alice.run(['user', 'signup',
             '--name', 'alice',
             '--email', 'alice@infinit.sh'])
  alice_json = alice.run_json(
    ['user', 'export', '--name', 'alice', '--full'])
  alice.run(
    ['device', 'transmit', '--user',
     '--as', 'alice', '--no-countdown'],
    input = passphrase)
  alice2.run(
    ['device', 'receive', '--user', '--name', 'alice'],
    input = passphrase)
  alice2_json = alice2.run_json(
    ['user', 'export', '--name', 'alice', '--full'])
  assertEq(alice_json['private_key'], alice2_json['private_key'])

#  Expired.
with Beyond() as beyond, Memo(beyond = beyond) as alice, \
     Memo(beyond = beyond) as alice2:
   passphrase = 'super_passphrase'
   # Signup without sending private key.
   alice.run(['user', 'signup',
              '--name', 'alice',
              '--email', 'alice@infinit.sh'])
   alice_json = alice.run_json(
     ['user', 'export', '--name', 'alice', '--full'])
   alice.run(
     ['device', 'transmit', '--user',
      '--as', 'alice', '--no-countdown'],
     input = passphrase)
   beyond.advance(5 * 6000 + 1)
   try:
     alice2.run(
       ['device', 'receive', '--user', '--name', 'alice'],
       input = passphrase)
     unreachable()
   except Exception as e:
     assert 'pairing/gone' in e.args[0]

# Invalid passphrase.
with Beyond() as beyond, Memo(beyond = beyond) as alice, \
     Memo(beyond = beyond) as alice2:
  passphrase = 'super_passphrase'
  # Signup without sending private key.
  alice.run(['user', 'signup',
             '--name', 'alice',
             '--email', 'alice@infinit.sh'])
  alice_json = alice.run_json(
    ['user', 'export', '--name', 'alice', '--full'])
  alice.run(
    ['device', 'transmit', '--user',
     '--as', 'alice', '--no-countdown'],
    input = passphrase)
  try:
    alice2.run(
      ['device', 'receive', '--user', '--name', 'alice'],
      input = 'not_the_passphrase')
    unreachable()
  except Exception as e:
    # Should just be 'invalid passphrase'.
    assert 'pairing/invalid_passphrase' in e.args[0]

# No pairing information.
with Beyond() as beyond, Memo(beyond = beyond) as alice, \
     Memo(beyond = beyond) as alice2:
  passphrase = 'super_passphrase'
  # Signup without sending private key.
  alice.run(['user', 'signup',
             '--name', 'alice',
             '--email', 'alice@infinit.sh'])
  try:
    alice.run(
      ['device', 'receive', '--user', '--name', 'alice'],
      input = passphrase)
    unreachable()
  except Exception as e:
    # Should just be 'No pairing information'.
    assert 'pairing_information/not_found' in e.args[0]

# Pairing information usable once.
with Beyond() as beyond, Memo(beyond = beyond) as alice, \
Memo(beyond = beyond) as alice2:
  passphrase = 'super_passphrase'
  alice.run(['user', 'signup',
             '--name', 'alice',
             '--email', 'alice@infinit.sh'])
  alice.run(
    ['device', 'transmit', '--user',
     '--as', 'alice', '--no-countdown'],
    input = passphrase)
  alice2.run(
    ['device', 'receive', '--user', '--name', 'alice'],
    input = passphrase)
  try:
    alice2.run(
      ['device', 'receive', '--user', '--name', 'alice'],
      input = passphrase)
    unreachable()
  except Exception as e:
    # Should just be 'No pairing information'.
    assert 'pairing_information/not_found' in e.args[0]
